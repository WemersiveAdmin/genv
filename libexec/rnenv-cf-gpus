#!/bin/bash

set -e
[ -n "$RNENV_DEBUG" ] && set -x

if [[ $1 = "--description" ]] ; then
  echo "Amount of visible GPUs"
  exit 0
fi

print_help()
{
  echo "Usage: rnenv config gpus [-h|--help] ..."
  echo
  echo "Control the amount of GPUs to be provisioned for this environment."
  echo
  echo "  rnenv config gpus <count> [--save]"
  echo "  rnenv config gpus load"
  echo "  rnenv config gpus show"
  echo
}

print_help_and_fail()
{
  print_help >&2
  exit 1
}

configure()
{
  indices=$( exec rnenv coordinator --pid $RNENV_ENVIRONMENT_ID --count $1 )

  cat <<EOS
_rnenv_set_env RNENV_GPUS $1
_rnenv_replace_env CUDA_VISIBLE_DEVICES "$indices"
EOS
}

case $1 in
  "")
    print_help_and_fail
    ;;
  -h|--help)
    # we must fail here as the exit code of this
    # script indicates whether or not the output
    # should be 'eval'.
    print_help_and_fail
    ;;
  load)
    home="$(exec rnenv-home --quiet)"
    [[ -n "$home" && -f "$home/gpus" ]] && configure $(<"$home/gpus")
    ;;
  show)
    [ -n "$RNENV_GPUS" ] && echo "$RNENV_GPUS"
    ;;
  *)
    re='^[0-9]+$'
    [[ $1 =~ $re && "$1" -ge 0 ]] || print_help_and_fail

    configure $1

    if [[ "$2" = "--save" ]]; then
      home="$(exec rnenv-home)"
      echo "$1" > "$home/gpus"
    fi
    ;;
esac
