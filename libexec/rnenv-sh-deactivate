#!/bin/bash

set -e
[ -n "$RNENV_DEBUG" ] && set -x

if [[ $1 = "--description" ]] ; then
  echo "Deactivate environment"
  exit 0
fi

if [ -z "$RNENV_ENVIRONMENT_ID" ] ; then
  echo "Not running in an active environment" 1>&2
  exit 1
fi

cat <<EOS
( exec rnenv exec envs deactivate --pid \$\$ --eid \$RNENV_ENVIRONMENT_ID )

_rnenv_unset_envs()
{
  IFS=: read -a names <<< "\$RNENV_ENVS"
  _rnenv_unset_env RNENV_ENVS

  for name in "\${names[@]}"
  do
    _rnenv_unset_env \$name
  done
}

_rnenv_restore_envs()
{
  IFS=: read -a names <<< "\$RNENV_BACKUP_ENVS"
  _rnenv_unset_env RNENV_BACKUP_ENVS

  for name in "\${names[@]}"
  do
    backup="RNENV_BACKUP_ENV_\$name"
    export \$name="\${!backup}"
    _rnenv_unset_env \$backup
  done
}

_rnenv_unset_envs
_rnenv_restore_envs

unset -f _rnenv_restore_envs
unset -f _rnenv_unset_envs

# from rnenv-sh-activate
unset -f _rnenv_replace_env
unset -f _rnenv_unset_env
unset -f _rnenv_set_env
unset -f _rnenv_backup_env
unset -f _rnenv_append_env
EOS
