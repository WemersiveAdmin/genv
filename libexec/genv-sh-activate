#!/bin/bash

set -e
[ -n "$GENV_DEBUG" ] && set -x

if [[ $1 = "--description" ]] ; then
  echo "Activate environment"
  exit 0
fi

if [ -n "$GENV_ENVIRONMENT_ID" ] ; then
  echo "Already running in an active environment" 1>&2
  exit 1
fi

function reprint()
{
  while IFS= read -r line; do
    echo "echo \"${line//\$/\\\$}\""
  done;
}

print_help()
{
  echo "Usage: genv activate ... [-h|--help]"
  echo
  echo "Activate this environment."
  echo
  echo "Arguments:"
  echo "    --id         Environment identifier"
  echo
  echo "Options:"
  echo "    --no-load    Don't load configuration from disk at \$(genv home)"
  echo "    --no-attach  Don't attach to devices"
  echo
}

eid="\$\$"
load="1"
attach="1"

while [[ $# -gt 0 ]] ; do
  arg=$1
  shift

  case $arg in
    -h|--help)
      print_help | reprint
      exit
    ;;
    --id)
      eid="$1"
      [ "$#" -gt 0 ] && shift

      if [ -z "$eid" ]; then
        {
          echo "Missing value for '--id'"
          echo
          print_help
        } | reprint
        exit 1
      fi

      re='^[0-9]+$'
      if ! [[ $eid =~ $re && "$eid" -gt 0 ]]; then
        {
          echo "Invalid environment identifier ($eid); must be an integer"
          echo
          print_help
        } | reprint
        exit 1
      fi
    ;;
    --no-load)
      load="0"
    ;;
    --no-attach)
      attach="0"
    ;;
    *)
      {
        echo "Invalid argument '$arg'"
        echo
        print_help
      } | reprint
      exit 1
    ;;
  esac
done

function functions()
{
  cat <<EOS
_genv_append_to_env()
{
  # based on https://unix.stackexchange.com/a/415028
  export \$1="\${!1:+\${!1}:}\$2"
}

_genv_set_env()
{
  export \$1="\$2"
  _genv_append_to_env GENV_ENVS \$1
}

_genv_unset_env()
{
  unset \$1
  # TODO(raz): remove from 'GENV_ENVS'
}

_genv_backup_env()
{
  if [ -n "\${!1}" ]; then
    export GENV_BACKUP_ENV_\$1="\${!1}"
    _genv_append_to_env GENV_BACKUP_ENVS \$1
  fi
}

_genv_restore_env()
{
  backup="GENV_BACKUP_ENV_\$1"
  if [ -n "\${!backup}" ]; then
    export \$1="\${!backup}"
  fi
  unset \$backup
}

_genv_replace_env()
{
  _genv_backup_env \$1
  _genv_set_env \$1 "\$2"
}
EOS
}

function setup()
{
  cat <<EOS
_genv_replace_env PATH "$GENV_ROOT/shims:\$PATH"
_genv_replace_env PS1 "(genv) \${PS1-}"
EOS
}

function activation()
{
  cat <<EOS
_genv_set_env GENV_ENVIRONMENT_ID $eid
( exec genv exec envs activate --pid \$\$ --eid \$GENV_ENVIRONMENT_ID --uid \$(id -u) --username \$(id -un) )
EOS
}

function configuration()
{
  cat <<EOS
genv config --refresh
EOS

  if [ "$load" -eq 1 ]; then
    cat <<EOS
genv config --load
EOS
  fi
}

function devices()
{
  cat <<EOS
genv attach --refresh
EOS

  if [ "$attach" -eq 1 ]; then
    cat <<EOS
if [ "\$CUDA_VISIBLE_DEVICES" = "-1" ]; then
  genv attach --attach --quiet
fi
EOS
  fi
}

functions
setup
activation
configuration
devices
