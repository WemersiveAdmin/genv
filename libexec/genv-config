#!/bin/bash

set -e
[ -n "$GENV_DEBUG" ] && set -x

if [[ $1 = "--description" ]] ; then
  echo "Configure this environment"
  exit 0
fi

function reprint()
{
  while IFS= read -r line; do
    echo "echo \"${line//\$/\\\$}\""
  done;
}

print_help()
{
  echo "Usage: genv config ... [-h|--help]"
  echo
  echo "Configure this environment or print the current configuration."
  echo
  echo "Actions:"
  echo "    --print     Print configuration (default)"
  echo "    --clear     Clear configuration"
  echo "    --refresh   Only refresh without printing"
  echo
  echo "Options:"
  echo "    --load    Load from disk at \$(genv home) first"
  echo "    --save    Save to disk at \$(genv home) finally"
  echo
  echo "Fields:"
  for field in $(exec genv-commands --cf); do
    printf "    %-5s    %s\n" "$field" "$(exec $(command -v "genv-cf-$field") --description)"
  done
  echo
  echo "The terminal gets refreshed with the most recent environment configuration on any command."
  echo "This is useful when another terminal of the same environment updated the configuration for example."
  echo
}

action=""
field=""
args=()
for arg do
  shift
  case $arg in
    -h|--help)
      print_help | reprint
      exit
    ;;
    --print|--clear|--refresh)
      if [ -n "$action" ]; then
        {
          echo "Can't use '$arg' together with '$action'"
          echo
          print_help
        } | reprint
        exit 1
      fi
      action="$arg"
    ;;
    --load)
      load="1"
      home="$(exec genv-home --quiet)"
    ;;
    --save)
      save="1"
      home="$(exec genv-home)"
    ;;
    *)
      if [ -z "$field" ]; then
        field=$arg
      else
        args+=("$arg")
      fi
    ;;
  esac
done

all=""
if [ -n "$field" ]; then
  fields=($field)

  if [ -z "$(command -v "genv-cf-$field" || true)" ]; then
    {
      echo "No such configuration field '$field'"
      echo
      print_help
    } | reprint
    exit 1
  fi
else
  fields=(`genv-commands --cf`)
  all="1"
fi

if [[ "$load" = "1" && -n "$home" ]]; then
  for field in ${fields[@]}; do
    if [ -f "$home/$field" ]; then
      value=$(<"$home/$field")
      ( exec genv-cf-$field "$value" )
    fi
  done
fi

if ! [[ ("$load" = "1" || "$save" = "1") && -z "$action" ]]; then # don't print if only loading and/or saving
  for field in ${fields[@]}; do
    ( GENV_CONFIG_PRINT_PREFIX="$all" exec genv-cf-$field $action "${args[@]}" )
  done
fi

if [ "$save" = "1" ]; then
  for field in ${fields[@]}; do
    ( GENV_CONFIG_PRINT_TARGET="$home/$field" exec genv-cf-$field )
  done
fi
