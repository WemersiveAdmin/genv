#!/bin/bash

set -e
[ -n "$RNENV_DEBUG" ] && set -x

if [[ $1 = "--description" ]] ; then
  echo "Configure this environment"
  exit 0
fi

print_command()
{
  printf "    %-5s    %s\n" "$1" "$2"
}

print_help()
{
  echo "Usage: rnenv config <command> [-h|--help]"
  echo
  echo "Commands:"
  print_command "load" "Load configuration from disk"
  print_command "show" "Show current configuration"
  echo
  echo "Subcommands:"
  for command in $(exec rnenv-commands --cf); do
    print_command "$command" "$(exec $(command -v "rnenv-cf-$command") --description)"
  done
  echo
}

print_help_and_fail()
{
  print_help >&2
  exit 1
}

command="$1"
case "$command" in
"")
  print_help_and_fail
  ;;
-h|--help)
  print_help
  ;;
load)
  for command in $(exec rnenv-commands --cf); do
    ( exec rnenv-cf-$command load )
  done
  ;;
show)
  for command in $(exec rnenv-commands --cf); do
    value=$(exec rnenv-cf-$command show)
    [ -n "$value" ] && echo "$command: $value"
  done
  ;;
*)
  if [ -n "$(command -v "rnenv-cf-$command" || true)" ]; then
    # subcommands should have been caught by the injected
    # script at 'rnenv-init'.
    # if we reached here this means that the environment
    # is not properly initialized.
    ( exec rnenv init --warn ) >&2
    exit 1
  else
    {
      echo "No such command '$command'"
      echo
      print_help_and_fail
    } >&2
  fi
  ;;
esac
